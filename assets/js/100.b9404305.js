(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{454:function(s,a,n){"use strict";n.r(a);var t=n(45),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"常见问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[s._v("#")]),s._v(" 常见问题")]),s._v(" "),n("h3",{attrs:{id:"一、《java实战开发》页面访问服务器返回json格式数据太大-导致数据不全被截断-无法展示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、《java实战开发》页面访问服务器返回json格式数据太大-导致数据不全被截断-无法展示"}},[s._v("#")]),s._v(" 一、《Java实战开发》页面访问服务器返回json格式数据太大，导致数据不全被截断，无法展示")]),s._v(" "),n("blockquote",[n("p",[s._v("问题：页面展示调用查询方法查询全部数据的时候一直显示loading。。。，打开调试器显示 Failed to load resource: net::ERR_SPDY_PROTOCOL_ERROR，而少部分查询则正常显示。")])]),s._v(" "),n("p",[s._v("因为数据中有图片转成的二进制数组，数据比较长，由此怀疑是返回数据大小的问题，经过排查发现查询全部时返回的json数据不全，被截断了，因此页面无法解析。（这个问题真的很坑，排查了很久才发现是nginx的问题）")]),s._v(" "),n("p",[s._v("经过查询资料，发现是nginx代理的问题。")]),s._v(" "),n("p",[s._v("原因：nginx对于小的反向代理请求是使用内存作中转，对于稍微大一点的，是使用临时文件系统来做中转的，临时文件目录/usr/local/nginx/proxy_temp，而对这个目录没有读写权限，导致数据不全。")]),s._v(" "),n("p",[s._v("解决：然后让运维看了下nginx的日志和目录权限，发现确实如此，给临时文件目录加上读写权限。 搞定🤝")]),s._v(" "),n("h3",{attrs:{id:"二、ajax中的beforesend"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、ajax中的beforesend"}},[s._v("#")]),s._v(" 二、Ajax中的beforeSend")]),s._v(" "),n("blockquote",[n("p",[s._v("在实际的项目中,用户经常会把已提交的数据再次提交,这时候数据库就会因此出现数据的重复.而jquery中的ajax方法中正好有解决此问题的方法,如下红色的代码,在ajax中的beforeSend方法中,当你触发相应事件后会调用ajax方法,当执行到beforeSend方法时,会根据不同的需求来满足功能的实现,比如当 点击提交后实现提交按钮的禁用,或者相应信息的显示")])]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v(" $.ajax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    url:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${basePath}")]),s._v('/u/submitLogin.shtml"')]),s._v(",\n      data:data,\n      type:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"post"')]),s._v(",\n      dataType:"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"json"')]),s._v(",\n      beforeSend:"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        layer.msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'开始登录，请注意后台控制台。'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"三、关于nginx服务器下部署vue项目-报405及504错误解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、关于nginx服务器下部署vue项目-报405及504错误解决方法"}},[s._v("#")]),s._v(" 三、关于Nginx服务器下部署Vue项目，报405及504错误解决方法")]),s._v(" "),n("p",[s._v("原因：出现这个错误，是因为未在nginx.conf中配置api的请求地址")]),s._v(" "),n("p",[s._v("解决方法：如我的api请求地址为：http://172.21.0.88:8080/api，那么我就在nginx.conf中的server{}里面添加以下配置：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("location /api/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            proxy_pass http://172.21.0.88:8080"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("添加之后，重启ngnix服务即可解决。\n以上为405错误的解决方法。")]),s._v(" "),n("p",[s._v("如果出现504，表示服务器请求超时，那么就还去nginx.conf中添加以下配置")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("proxy_read_timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("将请求时间设置长一些,单位为秒，我设置的夸张些，然后重启nginx服务器试试。")])])}),[],!1,null,null,null);a.default=e.exports}}]);