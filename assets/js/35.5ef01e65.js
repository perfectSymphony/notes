(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{394:function(t,s,a){"use strict";a.r(s);var e=a(45),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"如何将本地项目上传到github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何将本地项目上传到github"}},[t._v("#")]),t._v(" 如何将本地项目上传到Github")]),t._v(" "),a("h3",{attrs:{id:"第一步-我们需要先创建一个本地的版本库-其实也就是一个文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-我们需要先创建一个本地的版本库-其实也就是一个文件夹"}},[t._v("#")]),t._v(" 第一步：我们需要先创建一个本地的版本库（其实也就是一个文件夹）")]),t._v(" "),a("h3",{attrs:{id:"第二步-在命令行中输入git-init把这个文件夹变成git可管理的仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-在命令行中输入git-init把这个文件夹变成git可管理的仓库"}},[t._v("#")]),t._v(" 第二步：在命令行中输入git init把这个文件夹变成Git可管理的仓库")]),t._v(" "),a("p",[t._v("这时你会发现test里面多了个.git文件夹，它是Git用来跟踪和管理版本库的，因为它默认是隐藏文件，要是看不到就设置下文件夹和搜索选项。")]),t._v(" "),a("p",[t._v("之后把需要上传到GitHub的文件全部复制到这test这个目录下。")]),t._v(" "),a("p",[t._v('然后通过git add .(注意这个"."，是有空格的，"."代表这个test这个文件夹下的目录全部都提交。你也可以通过git add 文件名  提交指定的文件)把文件添加到缓存区。')]),t._v(" "),a("p",[t._v('然后，在使用命令git commit -m "这里面写你的注释"  把文件提交的本地仓库')]),t._v(" "),a("h3",{attrs:{id:"第三步-下面就到了连接远程仓库-也就是连接github"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-下面就到了连接远程仓库-也就是连接github"}},[t._v("#")]),t._v(" 第三步：下面就到了连接远程仓库（也就是连接Github）")]),t._v(" "),a("p",[t._v("由于本地Git仓库和Github仓库之间的传输是通过SSH加密的，所以连接时需要设置一下：")]),t._v(" "),a("p",[t._v("创建SSH KEY。先看一下你C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，没有就通过下面命令创建")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ ssh-keygen -t rsa -C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youremail@example.com"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("然后一路回车。这时你就会在用户下的.ssh目录里找到id_rsa和id_rsa.pub这两个文件。")]),t._v(" "),a("h2",{attrs:{id:"第四步-登录github-找到右上角的图标-打开点进里面的settings-再选中里面的ssh-and-gpg-keys-点击右上角的new-ssh-key-然后title里面随便填-再把刚才id-rsa-pub里面的内容复制到title下面的key内容框里面-最后点击add-ssh-key-这样就完成了ssh-key的加密。具体步骤也可看下面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-登录github-找到右上角的图标-打开点进里面的settings-再选中里面的ssh-and-gpg-keys-点击右上角的new-ssh-key-然后title里面随便填-再把刚才id-rsa-pub里面的内容复制到title下面的key内容框里面-最后点击add-ssh-key-这样就完成了ssh-key的加密。具体步骤也可看下面"}},[t._v("#")]),t._v(" 第四步：登录Github,找到右上角的图标，打开点进里面的Settings，再选中里面的SSH and GPG KEYS，点击右上角的New SSH key，然后Title里面随便填，再把刚才id_rsa.pub里面的内容复制到Title下面的Key内容框里面，最后点击Add SSH key，这样就完成了SSH Key的加密。具体步骤也可看下面：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bPwzdI.png",alt:"bPwzdI.png"}})]),t._v(" "),a("p",[t._v("上面key默认在C:\\Users\\Administrator.ssh下的id_rsa.pub文件中，把这个文件中的内容全部复制到上面的key里面就可以了。")]),t._v(" "),a("h3",{attrs:{id:"第五步-在github上创建一个git仓库。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五步-在github上创建一个git仓库。"}},[t._v("#")]),t._v(" 第五步：在Github上创建一个Git仓库。")]),t._v(" "),a("p",[t._v("你可以直接点New repository来创建，比如我创建了一个tes2t的仓库。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bP08OJ.png",alt:"bP08OJ.png"}})]),t._v(" "),a("p",[t._v("上面我没有默认勾选Initialize this repository with a README，勾选和不勾选创建的结果区别如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bP0BlD.png",alt:"bP0BlD.png"}})]),t._v(" "),a("p",[t._v("下边这个是勾选的")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bP0RtP.png",alt:"bP0RtP.png"}})]),t._v(" "),a("h3",{attrs:{id:"第六步-在github上创建好git仓库之后我们就可以和本地仓库进行关联了-根据创建好的git仓库页面的提示-可以在本地test仓库的命令行输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六步-在github上创建好git仓库之后我们就可以和本地仓库进行关联了-根据创建好的git仓库页面的提示-可以在本地test仓库的命令行输入"}},[t._v("#")]),t._v(" 第六步：在Github上创建好Git仓库之后我们就可以和本地仓库进行关联了，根据创建好的Git仓库页面的提示，可以在本地test仓库的命令行输入：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:smfx1314/test2.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"第七步-关联好之后我们就可以把本地库的所有内容推送到远程仓库-也就是github-上了-通过"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七步-关联好之后我们就可以把本地库的所有内容推送到远程仓库-也就是github-上了-通过"}},[t._v("#")]),t._v(" 第七步：关联好之后我们就可以把本地库的所有内容推送到远程仓库（也就是Github）上了，通过：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("由于新建的远程仓库是空的，所以要加上-u这个参数。然后进去GitHub test2这个仓库刷新下就会有已经上传的文件夹了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bPBpnJ.png",alt:"bPBpnJ.png"}})]),t._v(" "),a("p",[t._v("如果新建远程仓库不是空的，例如你勾选了 Initialize this repository with a README。那么你通过命令")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master是会报错的，如下：\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/23/bPBZcD.png",alt:"bPBZcD.png"}})]),t._v(" "),a("p",[t._v("这是由于你新创建的那个仓库里面的README文件不在本地仓库目录中，这时我们可以通过以下命令先将内容合并以下：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase origin master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://s4.ax1x.com/2022/02/24/bPBNuQ.png",alt:"bPBNuQ.png"}})]),t._v(" "),a("p",[t._v("再输入")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("至此就完成了将本地项目上传到Github的整个过程。")])])}),[],!1,null,null,null);s.default=i.exports}}]);