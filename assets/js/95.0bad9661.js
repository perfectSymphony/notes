(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{451:function(a,s,t){"use strict";t.r(s);var n=t(45),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"常见问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[a._v("#")]),a._v(" 常见问题")]),a._v(" "),t("h3",{attrs:{id:"一、《java实战开发》页面访问服务器返回json格式数据太大-导致数据不全被截断-无法展示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、《java实战开发》页面访问服务器返回json格式数据太大-导致数据不全被截断-无法展示"}},[a._v("#")]),a._v(" 一、《Java实战开发》页面访问服务器返回json格式数据太大，导致数据不全被截断，无法展示")]),a._v(" "),t("blockquote",[t("p",[a._v("问题：页面展示调用查询方法查询全部数据的时候一直显示loading。。。，打开调试器显示 Failed to load resource: net::ERR_SPDY_PROTOCOL_ERROR，而少部分查询则正常显示。")])]),a._v(" "),t("p",[a._v("因为数据中有图片转成的二进制数组，数据比较长，由此怀疑是返回数据大小的问题，经过排查发现查询全部时返回的json数据不全，被截断了，因此页面无法解析。（这个问题真的很坑，排查了很久才发现是nginx的问题）")]),a._v(" "),t("p",[a._v("经过查询资料，发现是nginx代理的问题。")]),a._v(" "),t("p",[a._v("原因：nginx对于小的反向代理请求是使用内存作中转，对于稍微大一点的，是使用临时文件系统来做中转的，临时文件目录/usr/local/nginx/proxy_temp，而对这个目录没有读写权限，导致数据不全。")]),a._v(" "),t("p",[a._v("解决：然后让运维看了下nginx的日志和目录权限，发现确实如此，给临时文件目录加上读写权限。 搞定🤝")]),a._v(" "),t("h3",{attrs:{id:"二、ajax中的beforesend"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、ajax中的beforesend"}},[a._v("#")]),a._v(" 二、Ajax中的beforeSend")]),a._v(" "),t("blockquote",[t("p",[a._v("在实际的项目中,用户经常会把已提交的数据再次提交,这时候数据库就会因此出现数据的重复.而jquery中的ajax方法中正好有解决此问题的方法,如下红色的代码,在ajax中的beforeSend方法中,当你触发相应事件后会调用ajax方法,当执行到beforeSend方法时,会根据不同的需求来满足功能的实现,比如当 点击提交后实现提交按钮的禁用,或者相应信息的显示")])]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[a._v(" $.ajax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    url:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${basePath}")]),a._v('/u/submitLogin.shtml"')]),a._v(",\n      data:data,\n      type:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"post"')]),a._v(",\n      dataType:"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"json"')]),a._v(",\n      beforeSend:"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[a._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        layer.msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'开始登录，请注意后台控制台。'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);